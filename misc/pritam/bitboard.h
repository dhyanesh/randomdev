class bitboard
{
	unsigned int WP;
	unsigned int BP;
	unsigned int K;
	unsigned int MU3;
	unsigned int MD3;
	unsigned int MU5;
	unsigned int MD5;
	unsigned int CENTRE;
	unsigned int MASK_ROW7;
	unsigned int MASK_ROW6;
	unsigned int MASK_ROW5;
	unsigned int MASK_ROW4;
	unsigned int MASK_ROW3;
	unsigned int MASK_ROW2;
	unsigned int MASK_ROW1;
	unsigned int MASK_ROW0;
	unsigned int MASK_COL1;
	unsigned int MASK_COL8;
	unsigned int MASK_DCORNER1;
	unsigned int MASK_DCORNER2;
	int highbit[1<<16];
	int bitcount[1<<16];
	unsigned long long jumps;
	unsigned int visited;
	public :
	void display(unsigned int);
	bitboard();
	int evaluateboardwhite();
	int evaluateboardblack();
	int countbits(unsigned int);
	int precountbits(unsigned int);
	unsigned int getwhite();
	unsigned int getblack();
	unsigned int getkings();
	void setkings(unsigned int);
	void setwhite(unsigned int);
	void setblack(unsigned int);
	void domovewhite(int,int);
	void domoveblack(int,int);
	void dojumpwhite(int,int);
	void dojumpblack(int,int);	
	unsigned int getmoverswhite();
	unsigned int getmoversblack();
	unsigned int getjumperswhite();
	unsigned int getjumpersblack();
	void getmoveswhite(int *, int &);
	void getmovesblack(int *, int &);
	void getjumpswhite(unsigned long long *, int &);
	void getjumpsblack(unsigned long long  *, int &);
	bool jumpswhite(short int, int, int, int &);
	bool jumpsblack(short int, int, int, int &);
	int highestbit(unsigned int);
	int lowestbit(unsigned int);
	void debug();
	unsigned int reversebits(unsigned int);
};
